name: Client Deployment
 
on:
  workflow_dispatch:
    inputs:
      client:
        description: "Client name"
        required: true
        default: "HelloWorld"
      environment:
        description: "Target environment (dev/stage/prod)"
        required: true
        default: "dev"
      version:
        description: "Artifacts version"
        required: true
        default: "artifacts_v8.2025.06"
 
jobs:
  deploy:
    runs-on: windows-latest
 
    steps:
      # Step 1: Checkout repository
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
 
      # Step 2: Setup environment variables
      - name: ⚙️ Setup variables
        shell: pwsh
        run: |
          echo "CLIENT=${{ github.event.inputs.client }}" >> $env:GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $env:GITHUB_ENV
          echo "VERSION=${{ github.event.inputs.version }}" >> $env:GITHUB_ENV
          echo "ARTIFACTS_DIR=${{ github.workspace }}/artifacts/${{ github.event.inputs.version }}" >> $env:GITHUB_ENV
 
      # Step 3: Load config if needed (dummy here, replace if required)
      - name: 📄 Load config
        shell: pwsh
        run: |
          Write-Host "Loading configuration for $env:CLIENT in $env:ENVIRONMENT"
 
      # Step 4: Extract all .zip files inside artifacts/<version>
      - name: 📦 Extract Artifacts
        shell: pwsh
        run: |
          $artifactPath = "$env:ARTIFACTS_DIR"
          if (-not (Test-Path $artifactPath)) {
            Write-Error "Artifacts folder not found: $artifactPath"
            exit 1
          }
 
          $extractPath = Join-Path $env:GITHUB_WORKSPACE "extracted"
          if (Test-Path $extractPath) { Remove-Item -Recurse -Force $extractPath }
          New-Item -ItemType Directory -Path $extractPath | Out-Null
 
          $zips = Get-ChildItem -Path $artifactPath -Filter *.zip
          if ($zips.Count -eq 0) {
            Write-Error "No .zip files found in $artifactPath"
            exit 1
          }
 
          foreach ($zip in $zips) {
            $dest = Join-Path $extractPath ($zip.BaseName)
            Expand-Archive -Path $zip.FullName -DestinationPath $dest -Force
            Write-Host "✅ Extracted $($zip.Name) to $dest"
          }
 
          echo "EXTRACTED_DIR=$extractPath" >> $env:GITHUB_ENV
 
      # Step 5: Deploy with MSDeploy
      - name: 🚀 Deploy with MSDeploy
        shell: pwsh
        run: |
          Write-Host "Starting deployment for $env:CLIENT in $env:ENVIRONMENT"
 
          $folders = Get-ChildItem -Path "$env:EXTRACTED_DIR" -Directory
          if (-not $folders) {
            Write-Error "No extracted folders found in $env:EXTRACTED_DIR"
            exit 1
          }
 
          foreach ($folder in $folders) {
            Write-Host "Deploying from: $($folder.FullName)"
 
            & "C:\Program Files\IIS\Microsoft Web Deploy V3\msdeploy.exe" `
                -verb:sync `
                -source:contentPath="$($folder.FullName)" `
                -dest:auto,computerName="https://target-server.com/msdeploy.axd?site=$env:CLIENT",userName="username",password="password",authType="Basic" `
                -allowUntrusted
          }
 
      # Step 6: Cleanup unzipped artifacts to save space
      - name: 🧹 Cleanup extracted artifacts
        shell: pwsh
        run: |
          if (Test-Path $env:EXTRACTED_DIR) {
            Remove-Item -Recurse -Force $env:EXTRACTED_DIR
            Write-Host "Cleaned up extracted artifacts"
          }
 
      # Step 7: Success message
      - name: ✅ Deployment finished
        shell: pwsh
        run: |
          Write-Host "Deployment completed for $env:CLIENT in $env:ENVIRONMENT"

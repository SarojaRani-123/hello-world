name: Client Deployment
 
on:
  workflow_dispatch:
    inputs:
      client:
        description: 'Client name'
        required: true
      environment:
        description: 'Target environment'
        required: true
      version:
        description: 'Artifact version (e.g. v8.2025.06)'
        required: true
 
jobs:
  deploy:
    runs-on: windows-latest
 
    steps:
      # Step 1 - Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4
 
      # Step 2 - Set environment variables
      - name: Set variables
        run: |
          echo "CLIENT=${{ github.event.inputs.client }}" >> $env:GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $env:GITHUB_ENV
          echo "VERSION=${{ github.event.inputs.version }}" >> $env:GITHUB_ENV
          echo "Deploying client ${{ github.event.inputs.client }} to ${{ github.event.inputs.environment }} with version ${{ github.event.inputs.version }}"
 
      # Step 3 - Locate artifact folder
      - name: Locate artifacts
        run: |
          $folder = "artifacts/artifacts_${{ github.event.inputs.version }}"
          if (!(Test-Path $folder)) {
            Write-Error "‚ùå Artifact folder not found: $folder"
            exit 1
          }
          echo "ARTIFACT_FOLDER=$folder" >> $env:GITHUB_ENV
          echo "Found artifacts in $folder"
 
      # Step 4 - Extract all .zip subfolders (NEW ADDITION)
      - name: Extract API zips
        shell: pwsh
        run: |
          $artifactFolder = "${{ env.ARTIFACT_FOLDER }}"
          Write-Host "üîç Looking for zip files in $artifactFolder..."
          Get-ChildItem -Path $artifactFolder -Filter *.zip | ForEach-Object {
              $zipFile = $_.FullName
              $destDir = Join-Path $artifactFolder ($_.BaseName)
              if (Test-Path $destDir) { Remove-Item $destDir -Recurse -Force }
              Expand-Archive -Path $zipFile -DestinationPath $destDir -Force
              Write-Host "‚úÖ Extracted $($_.Name) to $destDir"
          }
 
      # Step 5 - Deploy using MSDeploy (OLD CODE)
      - name: Deploy with MSDeploy
        shell: pwsh
        run: |
          $artifactFolder = "${{ env.ARTIFACT_FOLDER }}"
          $apps = Get-ChildItem -Path $artifactFolder -Directory
          foreach ($app in $apps) {
            Write-Host "üöÄ Deploying $($app.FullName)..."
            & "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" `
              -verb:sync `
              -source:contentPath="$($app.FullName)" `
              -dest:contentPath="Default Web Site/$($app.Name)",computerName="https://${{ secrets.DEST_SERVER }}:8172/msdeploy.axd?site=Default Web Site",userName="${{ secrets.DEST_USER }}",password="${{ secrets.DEST_PASSWORD }}",authtype="Basic"
          }
 
      # Step 6 - Verify
      - name: Verify Deployment
        run: |
          echo "‚úÖ Deployment completed for ${{ env.CLIENT }} - ${{ env.ENVIRONMENT }} (version ${{ env.VERSION }})"
 
      # Step 7 - Cleanup
      - name: Cleanup
        run: echo "üßπ Nothing to clean, GitHub runner auto-cleans workspace."

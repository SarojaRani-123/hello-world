name: 7-Step Deployment with API-wise Deployment
 
on:
  workflow_dispatch:
    inputs:
      client:
        description: 'Client name (e.g., client1)'
        required: true
      env:
        description: 'Environment (pp, prod, qa)'
        required: true
      version:
        description: 'Artifact version (e.g., v8.2025.06)'
        required: true
 
jobs:
  deploy:
    runs-on: windows-latest
 
    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
 
      # 2️⃣ Load client config
      - name: Load Client Config
        shell: pwsh
        run: |
          $client = "${{ github.event.inputs.client }}"
          $envName = "${{ github.event.inputs.env }}"
          $configPath = ".\configs\$client\$envName\config.json"
          if (Test-Path $configPath) {
              Write-Host "Config loaded for $client in $envName environment"
              $config = Get-Content $configPath | ConvertFrom-Json
              Write-Host "App Root Path: $($config.appRootPath)"
              Write-Host "APIs: $($config.apiNames -join ', ')"
          } else {
              Write-Host "Config not found for $client in $envName environment"
              exit 1
          }
 
      # 3️⃣ Set artifact version
      - name: Set Artifact Version
        shell: pwsh
        run: |
          $version = "${{ github.event.inputs.version }}"
          Write-Host "Artifact version set to $version"
          echo "ARTIFACT_VERSION=$version" >> $env:GITHUB_ENV
 
      # 4️⃣ Extract artifact ZIPs (fixed safe extraction)
      - name: Extract Artifact ZIPs
        shell: pwsh
        run: |
          $artifactFolder = ".\artifacts\artifacts_${{ env.ARTIFACT_VERSION }}"
          $destRoot = "$env:GITHUB_WORKSPACE\extracted"
 
          # Create extracted folder
          if (-Not (Test-Path $destRoot)) { New-Item -ItemType Directory -Force -Path $destRoot }
 
          # Extract each .zip inside artifact folder
          Get-ChildItem -Path $artifactFolder -Filter *.zip | ForEach-Object {
              $zipFile = $_.FullName
              $destDir = Join-Path $destRoot ($_.BaseName)
              if (Test-Path $destDir) { Remove-Item -Recurse -Force $destDir }
              Expand-Archive -Path $zipFile -DestinationPath $destDir -Force
              Write-Host "Extracted $($_.Name) to $destDir"
          }
 
      # 5️⃣ Deploy APIs to Local IIS
      - name: Deploy APIs
        shell: pwsh
        run: |
          $iisRoot = $config.appRootPath
          if (-Not (Test-Path $iisRoot)) { New-Item -ItemType Directory -Path $iisRoot }
 
          $artifactRoot = "$env:GITHUB_WORKSPACE\extracted"
          foreach ($api in $config.apiNames) {
              $sourcePath = Join-Path $artifactRoot $api
              $destPath = Join-Path $iisRoot $api
              if (-Not (Test-Path $destPath)) { New-Item -ItemType Directory -Path $destPath }
              Write-Host "Deploying API '$api' from '$sourcePath' to '$destPath'"
              Copy-Item -Path "$sourcePath\*" -Destination $destPath -Recurse -Force
          }
 
      # 6️⃣ Post-deployment step
      - name: Post Deployment Step
        run: Write-Host "Post-deployment step executed"
 
      # 7️⃣ Deployment complete
      - name: Deployment Complete
        run: Write-Host "✅ Deployment complete for client ${{ github.event.inputs.client }}, version ${{ env.ARTIFACT_VERSION }}"

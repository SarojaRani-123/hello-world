- name: Deploy IIS with Folder Structure and Applications
  hosts: windows
  gather_facts: no
  vars_files:
    - vars.yml
 
  tasks:
    # Step 1: Install IIS features
    - name: Install IIS + management tools
      ansible.windows.win_feature:
        name:
          - Web-Server
          - Web-Mgmt-Tools
        state: present
        include_sub_features: yes
        include_management_tools: yes
      register: iis_features
 
    - name: Reboot if required
      ansible.windows.win_reboot:
        msg: "Rebooting after IIS installation"
      when: iis_features.reboot_required | default(false)
 
    # Step 2: Ensure deployment base folder
    - name: Ensure deployment base folder exists
      ansible.windows.win_file:
        path: C:\inetpub\wwwroot\deployment
        state: directory
 
    # Step 3: Create site folder
    - name: Ensure site folder exists
      ansible.windows.win_file:
        path: C:\inetpub\wwwroot\deployment\{{ site_name }}
        state: directory
 
    # Step 4: Create subfolders for apps
    - name: Ensure app subfolders exist
      ansible.windows.win_file:
        path: C:\inetpub\wwwroot\deployment\{{ site_name }}\{{ item.key }}
        state: directory
      loop: "{{ apps | dict2items }}"
      when: item.value.enabled | bool
 
    # Step 5: Create CloudAPI base folder
    - name: Ensure CloudAPI folder exists if enabled
      ansible.windows.win_file:
        path: C:\inetpub\wwwroot\deployment\{{ site_name }}\CloudAPI
        state: directory
      when: cloudapis.CloudAPI.enabled | bool
 
    # Step 6: Create CloudAPI subfolders
    - name: Ensure CloudAPI subfolders exist
      ansible.windows.win_file:
        path: C:\inetpub\wwwroot\deployment\{{ site_name }}\CloudAPI\{{ item.name }}
        state: directory
      loop: "{{ cloudapis.CloudAPI.subfolders }}"
      when: cloudapis.CloudAPI.enabled | bool and item.enabled | bool
 
    # Step 7: Ensure site exists
    - name: Ensure IIS website exists
      microsoft.iis.website:
        name: "{{ site_name }}"
        state: started
        physical_path: C:\inetpub\wwwroot\deployment\{{ site_name }}
        bindings:
          - protocol: http
            port: 80
            hostname: "{{ domain_name }}"
          - protocol: https
            port: 443
            hostname: "{{ domain_name }}"
 
    # Step 8: Ensure app pools for apps
    - name: Ensure app pools exist for apps
      microsoft.iis.web_app_pool:
        name: "app_pool_{{ site_name }}_{{ item.key }}"
        state: started
      loop: "{{ apps | dict2items }}"
      when: item.value.enabled | bool
 
    # Step 9: Ensure CloudAPI app pool
    - name: Ensure CloudAPI app pool exists
      microsoft.iis.web_app_pool:
        name: "app_pool_{{ site_name }}_CloudAPI"
        state: started
      when: cloudapis.CloudAPI.enabled | bool
 
    # Step 10: Ensure CloudAPI subfolder app pools
    - name: Ensure CloudAPI subfolder app pools exist
      microsoft.iis.web_app_pool:
        name: "app_pool_{{ site_name }}_CloudAPI_{{ item.name }}"
        state: started
      loop: "{{ cloudapis.CloudAPI.subfolders }}"
      when: cloudapis.CloudAPI.enabled | bool and item.enabled | bool
 
    # Step 11: Ensure web applications for apps
    - name: Ensure web applications exist for apps
      microsoft.iis.web_application:
        site: "{{ site_name }}"
        name: "{{ item.key }}"
        physical_path: C:\inetpub\wwwroot\deployment\{{ site_name }}\{{ item.key }}
        application_pool: "app_pool_{{ site_name }}_{{ item.key }}"
        state: present
      loop: "{{ apps | dict2items }}"
      when: item.value.enabled | bool
 
    # Step 12: Ensure CloudAPI web application
    - name: Ensure CloudAPI web application exists
      microsoft.iis.web_application:
        site: "{{ site_name }}"
        name: "CloudAPI"
        physical_path: C:\inetpub\wwwroot\deployment\{{ site_name }}\CloudAPI
        application_pool: "app_pool_{{ site_name }}_CloudAPI"
        state: present
      when: cloudapis.CloudAPI.enabled | bool
 
    # Step 13: Ensure CloudAPI subfolder web applications
    - name: Ensure CloudAPI subfolder web applications exist
      microsoft.iis.web_application:
        site: "{{ site_name }}"
        name: "CloudAPI/{{ item.name }}"
        physical_path: C:\inetpub\wwwroot\deployment\{{ site_name }}\CloudAPI\{{ item.name }}
        application_pool: "app_pool_{{ site_name }}_CloudAPI_{{ item.name }}"
        state: present
      loop: "{{ cloudapis.CloudAPI.subfolders }}"
      when: cloudapis.CloudAPI.enabled | bool and item.enabled | bool
 
    # Step 14: Add hosts entry
    - name: Ensure hosts file entry exists
      ansible.windows.win_lineinfile:
        path: C:\Windows\System32\drivers\etc\hosts
        line: "{{ ansible_hostname }} {{ domain_name }}"
        state: present
 
